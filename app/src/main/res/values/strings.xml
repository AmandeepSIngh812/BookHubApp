<resources>
    <string name="app_name">BookHub</string>
    <string name="dashboard">Dashboard</string>
    <string name="favourites">Favourites\n</string>
    <string name="profile">Profile</string>
    <string name="about_app">About App</string>
    <string name="navigation_bar">Navigation Bar</string>
    <string name="open_drawer">Open Drawer</string>
    <string name="close_drawer">Close Drawer</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="dashboard_fragment">Dashboard Fragment</string>
    <string name="favourites_fragment">Favourites Fragment</string>
    <string name="profile_fragment">Profile Fragment</string>
    <string name="about_app_fragment">AboutApp Fragment</string>
    <string name="add_to_favourites">ADD TO FAVOURITES</string>
    <string name="about_the_book">About the Book</string>
    <string name="name_of_the_book">Name of the Book</string>
    <string name="name_of_the_author">Name of the Author</string>
    <string name="action_sort">Sort</string>
    <string name="aboutapp">\"Bookhub\" is a hypothetical project that involves building an mobile android application application that aggregates and displays books from various sources using Kotlin and an external API. The project\'s main goal is to create a user-friendly and visually appealing platform where users can access and read description about various books and can add them into the favorites. In the application we can arrange books on the basis of their rating. Users can select their preferred book to view and read the description of that book. The main activity of the application would display a list of Books, rating, price, author, and images. Users can read the description of book by clicking on the book. Application on opening requires internet connection to be functioning, else the user will be redirected to the settings of the mobile. The application should be responsive and work well on all android devices . The user interface should be intuitive and easy to navigate, allowing users to access books  without confusion. The application should handle errors gracefully, such as when an API request fails or an  cannot be loaded. If the API returns a large number of articles, pagination can be implemented to split them into manageable chunks for the user.\n</string>
    <string name="about_the_app">ABOUT THE APP</string>

</resources>